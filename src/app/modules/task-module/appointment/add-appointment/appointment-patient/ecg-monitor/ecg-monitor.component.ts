import { Component, Inject, OnInit } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';
import { ApiService } from 'src/app/api.service';
import { AppointmentService } from '../../../appointment.service';

@Component({
  selector: 'app-ecg-monitor',
  templateUrl: './ecg-monitor.component.html',
  styleUrls: ['./ecg-monitor.component.scss']
})
export class EcgMonitorComponent implements OnInit {

  Lead_1: any = [];
  Lead_2: any = [];
  Lead_3: any = [];
  AVR: any = [];
  AVL: any = [];
  AVF: any = [];
  V_1: any = [];
  V_2: any = [];
  V_3: any = [];
  V_4: any = [];
  V_5: any = [];
  V_6: any = [];

  constructor(private dialogRef: MatDialogRef<EcgMonitorComponent>, @Inject(MAT_DIALOG_DATA) private _data: any, public api: ApiService, private service: AppointmentService) {
    [{ tet: [0, 0], }]

    //  this.Lead
    // this.Lead
    // this.Lead_3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, -1, -2, -1, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 5, 10, 12, 15, 13, 10, 7, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 6, 10, 13, 12, 10, 7, 4, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 4, 7, 11, 12, 12, 7, 5, 1, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, -1, 0, -1, 0, 0, 0, 0, -1, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 1, 2, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 2, 6, 10, 12, 12, 10, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 4, 8, 11, 12, 12, 8, 5, 1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 2, 6, 10, 12, 12, 10, 6, 2, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    // this.AVR = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, -5, -6, -7, -7, -8, -9, -10, -10, -10, -11, -11, -11, -11, -10, -11, -10, -10, -10, -8, -7, -7, -6, -5, -5, -3, -2, -1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 0, 0, 0, -1, -2, -2, -2, -2, -2, -2, -2, -1, 0, 0, 0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 5, 8, 10, 10, 4, -1, -15, -26, -38, -44, -39, -28, -18, -5, 2, 5, 7, 7, 5, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1, 0, 0, 0, -1, -2, -3, -4, -5, -5, -6, -7, -8, -8, -9, -9, -10, -9, -10, -9, -9, -9, -9, -7, -7, -7, -6, -5, -5, -3, -2, -2, 0, 0, 0, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 2, 2, 3, 3, 3, 2, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2, 2, 1, 0, 0, 0, -2, -2, -2, -2, -2, -2, -2, -2, -1, 0, 0, 0, 1, 2, 2, 3, 3, 2, 3, 2, 3, 2, 3, 2, 2, 3, 3, 3, 2, 2, 2, 2, 3, 4, 6, 10, 10, 7, 1, -9, -22, -33, -43, -42, -35, -22, -13, 0, 4, 6, 7, 6, 4, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 1, 0, 0, 0, -1, -2, -3, -4, -5, -5, -7, -7, -7, -8, -9, -10, -10, -10, -10, -10, -10, -10, -9, -9, -7, -7, -7, -6, -5, -5, -3, -2, -2, 0, 0, 0, 1, 2, 2, 3, 3, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 0, 0, 0, -1, -2, -2, -2, -2, -2, -2, -2, -2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 4, 8, 10, 10, 4, -2, -16, -27, -39, -44, -40, -28, -18, -5, 2, 5, 7, 7, 5, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 3, 2, 3, 3, 2, 2, 3, 3, 3, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, -1, -2, -4, -5, -5, -6, -7, -7, -8, -9, -9, -10, -10, -10, -10, -10, -10, -9, -9, -8, -7, -7, -6, -5, -5, -4, -2, -2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 1, 0, 0, 0, -1, -2, -2, -2, -2, -2, -2, -2, -2, -1, 0, 0, 0, 1, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 6, 10, 10, 7, 1, -9, -22, -33, -43, -42, -35, -22, -12, 0, 4, 7, 7, 6, 4, 3, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 3, 3, 3, 2, 1, 0, 0, 0, -1, -2, -3, -4, -5, -5, -6, -7, -7, -8, -9, -10, -10, -10, -10, -10, -10, -10, -9, -8, -8, -7, -7, -6, -5, -5, -3, -2, -1, 0, 0, 0, 1, 2, 2, 2, 2, 3, 3, 2, 3, 3, 3, 3, 3, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 3, 2, 1, 0, 0, 0, -1, -2, -2, -2, -2, -2, -2, -2, -1, 0, 0, 0, 1, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 3, 3, 5, 8, 10, 10, 4, -2, -16, -27, -39, -44, -40, -28, -18, -5, 2, 5, 7, 7, 5, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, -1, -2, -4, -5, -5, -6, -7, -7, -8, -9, -9, -10, -10, -10, -10, -10, -10, -9, -9, -8, -7, -7, -6, -5, -5, -4, -2, -2, -1, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 3, 3, 2, 3, 3, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 1, 0, 0, 0, -1, -2, -2, -2, -2, -2, -2, -2, -2, -1, 0, 0, 0, 1, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 3, 4, 7, 10, 10, 7, 0, -9, -22, -33, -43, -42, -34, -22, -12, 0, 4, 6, 7, 6, 4, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3];
    // this
    // this
    // this.V_1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 5, 5, 5, 6, 6, 7, 7, 7, 8, 7, 8, 8, 8, 8, 7, 7, 7, 7, 6, 5, 6, 5, 4, 4, 3, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, -2, -1, 0, 5, 8, 12, 13, 10, 0, -10, -26, -38, -42, -34, -24, -12, -7, -3, -1, 0, 0, 0, 0, -1, 0, 0, 0, -1, -1, 0, 0, -1, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 2, 2, 2, 3, 3, 4, 5, 5, 5, 6, 6, 7, 6, 6, 6, 6, 6, 7, 6, 6, 5, 5, 5, 4, 3, 3, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 3, 7, 10, 13, 13, 6, -3, -18, -32, -41, -38, -28, -17, -9, -5, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 6, 5, 5, 5, 5, 4, 4, 3, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 1, 6, 9, 12, 14, 11, 0, -10, -26, -38, -41, -33, -23, -12, -6, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 5, 5, 5, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 5, 5, 5, 4, 4, 3, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 4, 7, 10, 13, 13, 6, -4, -18, -33, -41, -38, -28, -17, -9, -5, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 3, 4, 4, 5, 5, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 5, 5, 5, 4, 4, 3, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 2, 6, 9, 12, 14, 10, 0, -10, -26, -38, -41, -33, -23, -12, -6, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 4, 4, 5, 5, 5, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 5, 5, 5, 4, 4, 3, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 4, 7, 10, 13, 13, 6, -4, -19, -33, -41, -38, -27, -18, -8, -5, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    // this
    // this.V_3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 14, 16, 17, 20, 21, 22, 25, 25, 26, 27, 27, 27, 27, 27, 26, 25, 24, 23, 22, 20, 18, 16, 14, 12, 10, 7, 5, 3, 1, 0, -1, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -3, -2, -1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 0, 0, -1, -2, -2, -3, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -7, -10, -11, -5, 9, 23, 41, 56, 61, 47, 23, -10, -37, -50, -45, -34, -20, -13, -9, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, 0, 0, 2, 5, 6, 9, 10, 12, 15, 17, 18, 20, 22, 22, 24, 25, 25, 25, 25, 25, 25, 25, 23, 22, 21, 20, 17, 16, 14, 12, 10, 7, 5, 2, 1, 0, -2, -3, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, -2, -1, 0, 0, 0, 0, 2, 2, 2, 2, 1, 0, 0, 0, -1, -2, -3, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -7, -10, -9, 1, 17, 32, 50, 61, 57, 36, 7, -25, -45, -48, -39, -26, -15, -10, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -4, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, -1, 0, 2, 4, 6, 8, 10, 12, 15, 17, 18, 20, 21, 23, 24, 25, 25, 26, 26, 26, 25, 25, 25, 23, 22, 20, 19, 17, 15, 13, 11, 9, 7, 5, 2, 0, 0, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -2, -2, 0, 0, 0, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, -1, -2, -3, -4, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -6, -9, -10, -4, 10, 25, 42, 57, 61, 47, 23, -10, -37, -49, -43, -33, -20, -12, -8, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -4, -4, -5, -4, -2, 0, 1, 3, 5, 7, 10, 12, 14, 16, 17, 20, 21, 22, 24, 25, 25, 26, 26, 26, 26, 26, 25, 24, 23, 22, 20, 18, 17, 15, 12, 10, 8, 6, 4, 2, 0, -1, -3, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -4, -3, -2, -1, 0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, -2, -3, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -7, -10, -9, 2, 17, 32, 50, 61, 57, 35, 6, -25, -45, -47, -39, -26, -15, -10, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -4, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -3, -1, 0, 2, 4, 6, 8, 10, 12, 15, 17, 18, 20, 22, 23, 25, 25, 26, 26, 26, 26, 26, 25, 25, 23, 22, 21, 19, 17, 15, 13, 12, 9, 7, 5, 2, 0, 0, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -4, -2, -2, 0, 0, 0, 0, 1, 2, 2, 2, 1, 1, 0, 0, 0, -1, -2, -3, -5, -5, -5, -5, -5, -5, -4, -4, -4, -4, -4, -5, -5, -4, -5, -5, -5, -5, -5, -5, -6, -9, -10, -3, 10, 25, 42, 57, 62, 47, 22, -10, -37, -49, -43, -33, -20, -12, -8, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -2, 0, 1, 3, 5, 7, 10, 12, 14, 16, 17, 19, 21, 22, 24, 25, 25, 26, 26, 26, 26, 25, 25, 24, 22, 22, 20, 18, 16, 15, 12, 10, 8, 6, 3, 2, 0, -1, -3, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -4, -5, -5, -5, -4, -4, -4, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -4, -3, -2, -1, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, -2, -2, -4, -4, -4, -4, -4, -5, -5, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -7, -10, -8, 2, 17, 33, 50, 61, 56, 35, 5, -26, -45, -47, -39, -26, -15, -10, -6, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5];
    // this.V_4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 20, 20, 20, 20, 20, 19, 18, 17, 16, 15, 13, 12, 10, 8, 6, 5, 2, 0, 0, -2, -2, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, -2, -1, 0, 0, 0, 1, 1, 2, 2, 1, 0, 0, 0, -1, -2, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -12, -8, 1, 17, 37, 57, 70, 65, 51, 27, 7, -10, -20, -20, -17, -11, -7, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, -1, 0, 0, 2, 5, 6, 7, 10, 12, 13, 15, 15, 17, 18, 19, 20, 20, 20, 20, 20, 20, 19, 18, 17, 17, 15, 13, 12, 10, 9, 7, 5, 4, 2, 0, 0, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -2, -2, 0, 0, 0, 0, 1, 1, 2, 1, 1, 0, 0, 0, -1, -2, -3, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -7, -11, -11, -4, 8, 26, 47, 65, 70, 59, 40, 15, 0, -17, -21, -19, -13, -10, -7, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -2, 0, 0, 2, 3, 5, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 20, 20, 20, 20, 20, 19, 17, 17, 15, 14, 13, 11, 10, 7, 6, 5, 2, 0, 0, -2, -3, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -3, -2, -1, 0, 0, 0, 1, 1, 2, 1, 1, 0, 0, 0, 0, -2, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -10, -12, -8, 1, 17, 37, 57, 70, 65, 50, 27, 7, -10, -20, -21, -17, -12, -8, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, -1, 0, 0, 2, 4, 6, 8, 10, 12, 12, 15, 16, 17, 18, 19, 20, 20, 20, 20, 20, 20, 19, 18, 17, 17, 15, 13, 12, 10, 9, 7, 5, 3, 1, 0, -1, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -3, -2, 0, 0, 0, 0, 1, 2, 2, 1, 1, 0, 0, 0, -1, -2, -3, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -7, -11, -11, -4, 9, 26, 48, 65, 70, 58, 40, 15, 0, -17, -21, -19, -13, -10, -7, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, -2, 0, 0, 2, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 20, 20, 20, 20, 20, 19, 18, 17, 16, 15, 13, 11, 10, 8, 6, 5, 2, 0, 0, -2, -3, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, -2, -1, 0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, -2, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -10, -12, -8, 2, 17, 38, 57, 70, 65, 50, 26, 7, -11, -20, -21, -16, -11, -8, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -3, -1, 0, 1, 3, 5, 7, 8, 10, 12, 13, 15, 15, 17, 18, 19, 20, 20, 20, 20, 20, 20, 20, 18, 17, 16, 15, 14, 12, 10, 9, 7, 5, 3, 2, 0, 0, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -3, -2, -1, 0, 0, 0, 0, 1, 2, 2, 1, 1, 0, 0, 0, -1, -2, -3, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -7, -11, -11, -3, 9, 27, 49, 65, 70, 57, 38, 15, -1, -17, -21, -19, -13, -10, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5];
    // this.V_5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 6, 7, 7, 9, 10, 10, 11, 12, 12, 12, 13, 12, 12, 12, 12, 12, 11, 10, 10, 9, 8, 7, 5, 5, 3, 2, 1, 0, 0, -1, -2, -2, -2, -2, -3, -2, -2, -3, -2, -4, -3, -3, -2, -2, -3, -3, -2, -3, -3, -4, -3, -3, -3, -3, -4, -3, -3, -3, -3, -4, -3, -3, -3, -3, -4, -3, -3, -3, -3, -3, -3, -3, -3, -4, -4, -4, -4, -3, -3, -4, -3, -3, -3, -3, -4, -3, -3, -3, -3, -4, -4, -3, -2, -1, 0, 0, 0, 1, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, -1, -2, -3, -4, -4, -4, -5, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -4, -4, -4, -4, -5, -6, -9, -11, -11, -5, 5, 23, 40, 57, 61, 53, 37, 20, 4, -6, -9, -10, -9, -7, -5, -4, -4, -4, -4, -5, -4, -4, -4, -4, -5, -4, -4, -4, -4, -5, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -4, -4, -4, -4, -4, -3, -2, -1, 0, 0, 1, 2, 3, 5, 5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 11, 11, 11, 10, 10, 9, 9, 8, 7, 6, 5, 4, 2, 1, 0, 0, 0, -2, -2, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -4, -3, -4, -5, -5, -5, -4, -4, -4, -4, -4, -3, -4, -3, -4, -4, -4, -2, -2, -1, 0, 0, 1, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, -1, -2, -3, -3, -3, -4, -4, -3, -3, -4, -4, -3, -3, -3, -3, -3, -3, -4, -4, -3, -3, -4, -5, -7, -10, -12, -8, 0, 14, 32, 50, 62, 59, 46, 29, 12, -1, -7, -10, -9, -7, -5, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -2, -2, 0, 0, 0, 1, 2, 3, 5, 6, 7, 7, 8, 9, 10, 10, 11, 12, 12, 12, 12, 11, 11, 11, 10, 10, 9, 8, 7, 6, 5, 4, 2, 2, 0, 0, 0, -2, -2, -3, -4, -4, -3, -3, -4, -3, -3, -3, -3, -4, -4, -4, -4, -3, -3, -3, -3, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -2, -2, -1, 0, 0, 1, 2, 2, 3, 3, 3, 2, 2, 1, 0, 0, 0, -2, -2, -3, -3, -4, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -3, -4, -4, -5, -8, -11, -10, -4, 5, 24, 40, 57, 62, 54, 37, 20, 4, -5, -8, -9, -8, -6, -5, -3, -3, -3, -3, -3, -3, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 11, 11, 10, 9, 9, 7, 7, 6, 5, 4, 2, 1, 0, 0, 0, -2, -2, -3, -3, -3, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, 0, 0, 0, 2, 2, 2, 2, 3, 2, 2, 1, 0, 0, 0, -1, -2, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -5, -7, -10, -12, -7, 0, 15, 33, 50, 62, 59, 45, 28, 12, -1, -7, -10, -9, -7, -5, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, 0, 0, 1, 2, 3, 5, 5, 6, 7, 8, 9, 10, 11, 11, 12, 12, 12, 12, 12, 11, 11, 10, 10, 9, 7, 7, 6, 5, 4, 3, 2, 0, 0, 0, -2, -2, -3, -3, -3, -4, -4, -3, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, 0, 0, 0, 1, 2, 2, 3, 2, 2, 2, 1, 0, 0, 0, -2, -2, -3, -3, -4, -5, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -5, -8, -10, -10, -3, 6, 25, 41, 57, 62, 54, 37, 20, 4, -5, -9, -10, -8, -7, -5, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, 0, 0, 0, 2, 3, 4, 5, 7, 7, 8, 9, 10, 10, 10, 11, 12, 12, 12, 12, 12, 11, 10, 10, 9, 8, 7, 7, 5, 5, 3, 2, 1, 0, 0, -1, -2, -3, -4, -4, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, 0, 0, 1, 1, 2, 2, 2, 3, 2, 2, 1, 0, 0, 0, -1, -2, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -4, -3, -3, -4, -5, -7, -10, -12, -7, 0, 15, 33, 50, 62, 59, 45, 28, 12, -1, -7, -9, -9, -7, -5, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3];
    // this
    //this.TestEcgGraph();


  }

  ngOnInit(): void {
    this.TestEcgGraph();
    //console.log('Data', this._data);
    if (this._data.d == 1) {
      //console.log('Inside if statement', this._data);
      this.service.GetECGData(this._data.ApptId).subscribe((data: any) => {
        this.Lead_1 = data.lead_1;
        this.Lead_2 = data.lead_2;
        this.Lead_3 = data.lead_3;
        this.AVR = data.avr;
        this.AVL = data.avl;
        this.AVF = data.avf;
        this.V_1 = data.v_1;
        this.V_2 = data.v_2;
        this.V_3 = data.v_3;
        this.V_4 = data.v_4;
        this.V_5 = data.v_5;
        this.V_6 = data.v_6;
        this.TestEcgGraph();
      })
    }
    else if (this._data.d == 2) {
      //console.log('Inside if statement', this._data);

      this.Lead
      this.Lead
      this.Lead_3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, -1, -2, -1, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 5, 10, 12, 15, 13, 10, 7, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 6, 10, 13, 12, 10, 7, 4, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 4, 7, 11, 12, 12, 7, 5, 1, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, -1, 0, -1, 0, 0, 0, 0, -1, -1, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 0, 1, 2, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 2, 6, 10, 12, 12, 10, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 4, 8, 11, 12, 12, 8, 5, 1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 2, 6, 10, 12, 12, 10, 6, 2, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      this.AVR = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, -5, -6, -7, -7, -8, -9, -10, -10, -10, -11, -11, -11, -11, -10, -11, -10, -10, -10, -8, -7, -7, -6, -5, -5, -3, -2, -1, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 0, 0, 0, -1, -2, -2, -2, -2, -2, -2, -2, -1, 0, 0, 0, 1, 2, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 5, 8, 10, 10, 4, -1, -15, -26, -38, -44, -39, -28, -18, -5, 2, 5, 7, 7, 5, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 2, 1, 0, 0, 0, -1, -2, -3, -4, -5, -5, -6, -7, -8, -8, -9, -9, -10, -9, -10, -9, -9, -9, -9, -7, -7, -7, -6, -5, -5, -3, -2, -2, 0, 0, 0, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 3, 2, 2, 3, 3, 3, 2, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2, 2, 1, 0, 0, 0, -2, -2, -2, -2, -2, -2, -2, -2, -1, 0, 0, 0, 1, 2, 2, 3, 3, 2, 3, 2, 3, 2, 3, 2, 2, 3, 3, 3, 2, 2, 2, 2, 3, 4, 6, 10, 10, 7, 1, -9, -22, -33, -43, -42, -35, -22, -13, 0, 4, 6, 7, 6, 4, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 1, 0, 0, 0, -1, -2, -3, -4, -5, -5, -7, -7, -7, -8, -9, -10, -10, -10, -10, -10, -10, -10, -9, -9, -7, -7, -7, -6, -5, -5, -3, -2, -2, 0, 0, 0, 1, 2, 2, 3, 3, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 1, 0, 0, 0, -1, -2, -2, -2, -2, -2, -2, -2, -2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 4, 8, 10, 10, 4, -2, -16, -27, -39, -44, -40, -28, -18, -5, 2, 5, 7, 7, 5, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 3, 2, 3, 3, 2, 2, 3, 3, 3, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, -1, -2, -4, -5, -5, -6, -7, -7, -8, -9, -9, -10, -10, -10, -10, -10, -10, -9, -9, -8, -7, -7, -6, -5, -5, -4, -2, -2, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 1, 0, 0, 0, -1, -2, -2, -2, -2, -2, -2, -2, -2, -1, 0, 0, 0, 1, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 6, 10, 10, 7, 1, -9, -22, -33, -43, -42, -35, -22, -12, 0, 4, 7, 7, 6, 4, 3, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 3, 3, 3, 3, 2, 1, 0, 0, 0, -1, -2, -3, -4, -5, -5, -6, -7, -7, -8, -9, -10, -10, -10, -10, -10, -10, -10, -9, -8, -8, -7, -7, -6, -5, -5, -3, -2, -1, 0, 0, 0, 1, 2, 2, 2, 2, 3, 3, 2, 3, 3, 3, 3, 3, 2, 2, 3, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 3, 2, 1, 0, 0, 0, -1, -2, -2, -2, -2, -2, -2, -2, -1, 0, 0, 0, 1, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 3, 3, 5, 8, 10, 10, 4, -2, -16, -27, -39, -44, -40, -28, -18, -5, 2, 5, 7, 7, 5, 3, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, -1, -2, -4, -5, -5, -6, -7, -7, -8, -9, -9, -10, -10, -10, -10, -10, -10, -9, -9, -8, -7, -7, -6, -5, -5, -4, -2, -2, -1, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 3, 3, 3, 2, 3, 3, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 2, 2, 2, 3, 2, 2, 1, 0, 0, 0, -1, -2, -2, -2, -2, -2, -2, -2, -2, -1, 0, 0, 0, 1, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 2, 3, 4, 7, 10, 10, 7, 0, -9, -22, -33, -43, -42, -34, -22, -12, 0, 4, 6, 7, 6, 4, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3];
      this
      this
      this.V_1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 5, 5, 5, 6, 6, 7, 7, 7, 8, 7, 8, 8, 8, 8, 7, 7, 7, 7, 6, 5, 6, 5, 4, 4, 3, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, -2, -1, 0, 5, 8, 12, 13, 10, 0, -10, -26, -38, -42, -34, -24, -12, -7, -3, -1, 0, 0, 0, 0, -1, 0, 0, 0, -1, -1, 0, 0, -1, 0, -1, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 2, 2, 2, 3, 3, 4, 5, 5, 5, 6, 6, 7, 6, 6, 6, 6, 6, 7, 6, 6, 5, 5, 5, 4, 3, 3, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 3, 7, 10, 13, 13, 6, -3, -18, -32, -41, -38, -28, -17, -9, -5, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 6, 5, 5, 5, 5, 4, 4, 3, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 1, 6, 9, 12, 14, 11, 0, -10, -26, -38, -41, -33, -23, -12, -6, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 5, 5, 5, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 5, 5, 5, 4, 4, 3, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 3, 3, 3, 3, 2, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 4, 7, 10, 13, 13, 6, -4, -18, -33, -41, -38, -28, -17, -9, -5, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 3, 4, 4, 5, 5, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 5, 5, 5, 4, 4, 3, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 2, 6, 9, 12, 14, 10, 0, -10, -26, -38, -41, -33, -23, -12, -6, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 4, 4, 5, 5, 5, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 5, 5, 5, 4, 4, 3, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 3, 3, 3, 3, 3, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 4, 7, 10, 13, 13, 6, -4, -19, -33, -41, -38, -27, -18, -8, -5, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      this
      this.V_3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 14, 16, 17, 20, 21, 22, 25, 25, 26, 27, 27, 27, 27, 27, 26, 25, 24, 23, 22, 20, 18, 16, 14, 12, 10, 7, 5, 3, 1, 0, -1, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -3, -2, -1, 0, 0, 0, 1, 2, 2, 2, 1, 1, 0, 0, -1, -2, -2, -3, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -7, -10, -11, -5, 9, 23, 41, 56, 61, 47, 23, -10, -37, -50, -45, -34, -20, -13, -9, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, 0, 0, 2, 5, 6, 9, 10, 12, 15, 17, 18, 20, 22, 22, 24, 25, 25, 25, 25, 25, 25, 25, 23, 22, 21, 20, 17, 16, 14, 12, 10, 7, 5, 2, 1, 0, -2, -3, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, -2, -1, 0, 0, 0, 0, 2, 2, 2, 2, 1, 0, 0, 0, -1, -2, -3, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -7, -10, -9, 1, 17, 32, 50, 61, 57, 36, 7, -25, -45, -48, -39, -26, -15, -10, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -4, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, -1, 0, 2, 4, 6, 8, 10, 12, 15, 17, 18, 20, 21, 23, 24, 25, 25, 26, 26, 26, 25, 25, 25, 23, 22, 20, 19, 17, 15, 13, 11, 9, 7, 5, 2, 0, 0, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -2, -2, 0, 0, 0, 1, 1, 2, 2, 2, 2, 1, 0, 0, 0, -1, -2, -3, -4, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -6, -9, -10, -4, 10, 25, 42, 57, 61, 47, 23, -10, -37, -49, -43, -33, -20, -12, -8, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -4, -4, -5, -4, -2, 0, 1, 3, 5, 7, 10, 12, 14, 16, 17, 20, 21, 22, 24, 25, 25, 26, 26, 26, 26, 26, 25, 24, 23, 22, 20, 18, 17, 15, 12, 10, 8, 6, 4, 2, 0, -1, -3, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -4, -3, -2, -1, 0, 0, 0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 0, -2, -3, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -7, -10, -9, 2, 17, 32, 50, 61, 57, 35, 6, -25, -45, -47, -39, -26, -15, -10, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -4, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -3, -1, 0, 2, 4, 6, 8, 10, 12, 15, 17, 18, 20, 22, 23, 25, 25, 26, 26, 26, 26, 26, 25, 25, 23, 22, 21, 19, 17, 15, 13, 12, 9, 7, 5, 2, 0, 0, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -4, -2, -2, 0, 0, 0, 0, 1, 2, 2, 2, 1, 1, 0, 0, 0, -1, -2, -3, -5, -5, -5, -5, -5, -5, -4, -4, -4, -4, -4, -5, -5, -4, -5, -5, -5, -5, -5, -5, -6, -9, -10, -3, 10, 25, 42, 57, 62, 47, 22, -10, -37, -49, -43, -33, -20, -12, -8, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -2, 0, 1, 3, 5, 7, 10, 12, 14, 16, 17, 19, 21, 22, 24, 25, 25, 26, 26, 26, 26, 25, 25, 24, 22, 22, 20, 18, 16, 15, 12, 10, 8, 6, 3, 2, 0, -1, -3, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -4, -5, -5, -5, -4, -4, -4, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -4, -3, -2, -1, 0, 0, 0, 1, 2, 2, 2, 2, 1, 1, 0, 0, 0, -2, -2, -4, -4, -4, -4, -4, -5, -5, -4, -4, -4, -4, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -7, -10, -8, 2, 17, 33, 50, 61, 56, 35, 5, -26, -45, -47, -39, -26, -15, -10, -6, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5];
      this.V_4 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 20, 20, 20, 20, 20, 19, 18, 17, 16, 15, 13, 12, 10, 8, 6, 5, 2, 0, 0, -2, -2, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, -2, -1, 0, 0, 0, 1, 1, 2, 2, 1, 0, 0, 0, -1, -2, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -10, -12, -8, 1, 17, 37, 57, 70, 65, 51, 27, 7, -10, -20, -20, -17, -11, -7, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, -1, 0, 0, 2, 5, 6, 7, 10, 12, 13, 15, 15, 17, 18, 19, 20, 20, 20, 20, 20, 20, 19, 18, 17, 17, 15, 13, 12, 10, 9, 7, 5, 4, 2, 0, 0, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -2, -2, 0, 0, 0, 0, 1, 1, 2, 1, 1, 0, 0, 0, -1, -2, -3, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -7, -11, -11, -4, 8, 26, 47, 65, 70, 59, 40, 15, 0, -17, -21, -19, -13, -10, -7, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -2, 0, 0, 2, 3, 5, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 20, 20, 20, 20, 20, 19, 17, 17, 15, 14, 13, 11, 10, 7, 6, 5, 2, 0, 0, -2, -3, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -3, -2, -1, 0, 0, 0, 1, 1, 2, 1, 1, 0, 0, 0, 0, -2, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -10, -12, -8, 1, 17, 37, 57, 70, 65, 50, 27, 7, -10, -20, -21, -17, -12, -8, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, -1, 0, 0, 2, 4, 6, 8, 10, 12, 12, 15, 16, 17, 18, 19, 20, 20, 20, 20, 20, 20, 19, 18, 17, 17, 15, 13, 12, 10, 9, 7, 5, 3, 1, 0, -1, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -3, -2, 0, 0, 0, 0, 1, 2, 2, 1, 1, 0, 0, 0, -1, -2, -3, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -7, -11, -11, -4, 9, 26, 48, 65, 70, 58, 40, 15, 0, -17, -21, -19, -13, -10, -7, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, -2, 0, 0, 2, 4, 5, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 20, 20, 20, 20, 20, 19, 18, 17, 16, 15, 13, 11, 10, 8, 6, 5, 2, 0, 0, -2, -3, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -3, -2, -1, 0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, -2, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -6, -10, -12, -8, 2, 17, 38, 57, 70, 65, 50, 26, 7, -11, -20, -21, -16, -11, -8, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -3, -1, 0, 1, 3, 5, 7, 8, 10, 12, 13, 15, 15, 17, 18, 19, 20, 20, 20, 20, 20, 20, 20, 18, 17, 16, 15, 14, 12, 10, 9, 7, 5, 3, 2, 0, 0, -2, -4, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -4, -3, -2, -1, 0, 0, 0, 0, 1, 2, 2, 1, 1, 0, 0, 0, -1, -2, -3, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -7, -11, -11, -3, 9, 27, 49, 65, 70, 57, 38, 15, -1, -17, -21, -19, -13, -10, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5];
      this.V_5 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 6, 7, 7, 9, 10, 10, 11, 12, 12, 12, 13, 12, 12, 12, 12, 12, 11, 10, 10, 9, 8, 7, 5, 5, 3, 2, 1, 0, 0, -1, -2, -2, -2, -2, -3, -2, -2, -3, -2, -4, -3, -3, -2, -2, -3, -3, -2, -3, -3, -4, -3, -3, -3, -3, -4, -3, -3, -3, -3, -4, -3, -3, -3, -3, -4, -3, -3, -3, -3, -3, -3, -3, -3, -4, -4, -4, -4, -3, -3, -4, -3, -3, -3, -3, -4, -3, -3, -3, -3, -4, -4, -3, -2, -1, 0, 0, 0, 1, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, -1, -2, -3, -4, -4, -4, -5, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -4, -4, -4, -4, -5, -6, -9, -11, -11, -5, 5, 23, 40, 57, 61, 53, 37, 20, 4, -6, -9, -10, -9, -7, -5, -4, -4, -4, -4, -5, -4, -4, -4, -4, -5, -4, -4, -4, -4, -5, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -4, -4, -4, -4, -4, -3, -2, -1, 0, 0, 1, 2, 3, 5, 5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 11, 11, 11, 10, 10, 9, 9, 8, 7, 6, 5, 4, 2, 1, 0, 0, 0, -2, -2, -3, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, -5, -4, -4, -4, -4, -4, -4, -4, -4, -5, -5, -5, -5, -4, -3, -4, -5, -5, -5, -4, -4, -4, -4, -4, -3, -4, -3, -4, -4, -4, -2, -2, -1, 0, 0, 1, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, -1, -2, -3, -3, -3, -4, -4, -3, -3, -4, -4, -3, -3, -3, -3, -3, -3, -4, -4, -3, -3, -4, -5, -7, -10, -12, -8, 0, 14, 32, 50, 62, 59, 46, 29, 12, -1, -7, -10, -9, -7, -5, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -2, -2, 0, 0, 0, 1, 2, 3, 5, 6, 7, 7, 8, 9, 10, 10, 11, 12, 12, 12, 12, 11, 11, 11, 10, 10, 9, 8, 7, 6, 5, 4, 2, 2, 0, 0, 0, -2, -2, -3, -4, -4, -3, -3, -4, -3, -3, -3, -3, -4, -4, -4, -4, -3, -3, -3, -3, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -2, -2, -1, 0, 0, 1, 2, 2, 3, 3, 3, 2, 2, 1, 0, 0, 0, -2, -2, -3, -3, -4, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -3, -4, -4, -5, -8, -11, -10, -4, 5, 24, 40, 57, 62, 54, 37, 20, 4, -5, -8, -9, -8, -6, -5, -3, -3, -3, -3, -3, -3, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 11, 11, 10, 9, 9, 7, 7, 6, 5, 4, 2, 1, 0, 0, 0, -2, -2, -3, -3, -3, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, 0, 0, 0, 2, 2, 2, 2, 3, 2, 2, 1, 0, 0, 0, -1, -2, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -5, -7, -10, -12, -7, 0, 15, 33, 50, 62, 59, 45, 28, 12, -1, -7, -10, -9, -7, -5, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, 0, 0, 1, 2, 3, 5, 5, 6, 7, 8, 9, 10, 11, 11, 12, 12, 12, 12, 12, 11, 11, 10, 10, 9, 7, 7, 6, 5, 4, 3, 2, 0, 0, 0, -2, -2, -3, -3, -3, -4, -4, -3, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, 0, 0, 0, 1, 2, 2, 3, 2, 2, 2, 1, 0, 0, 0, -2, -2, -3, -3, -4, -5, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -5, -8, -10, -10, -3, 6, 25, 41, 57, 62, 54, 37, 20, 4, -5, -9, -10, -8, -7, -5, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, 0, 0, 0, 2, 3, 4, 5, 7, 7, 8, 9, 10, 10, 10, 11, 12, 12, 12, 12, 12, 11, 10, 10, 9, 8, 7, 7, 5, 5, 3, 2, 1, 0, 0, -1, -2, -3, -4, -4, -4, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -2, -1, 0, 0, 1, 1, 2, 2, 2, 3, 2, 2, 1, 0, 0, 0, -1, -2, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -4, -4, -3, -3, -4, -5, -7, -10, -12, -7, 0, 15, 33, 50, 62, 59, 45, 28, 12, -1, -7, -9, -9, -7, -5, -4, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3];
      this
      this.TestEcgGraph();

    }
    else {
      this.api.ecgDataSubject.subscribe((response: any) => {

        for (var ecgData of response) {
          //"ECGDA:", ecgData);
          if (ecgData.Lead_1) {
            this.Lead_1 = ecgData.Lead_1;
          }
          if (ecgData.Lead_2) {
            this.Lead_2 = ecgData.Lead_2;
          }
          if (ecgData.Lead_3) {
            this.Lead_3 = ecgData.Lead_3;
          }
          if (ecgData.AVR) {
            this.AVR = ecgData.AVR;
          }
          if (ecgData.AVL) {
            this.AVL = ecgData.AVL;
          }
          if (ecgData.AVF) {
            this.AVF = ecgData.AVF;
          }
          if (ecgData.V_1) {
            this.V_1 = ecgData.V_1;
          }
          if (ecgData.V_2) {
            this.V_2 = ecgData.V_2;
          }
          if (ecgData.V_3) {
            this.V_3 = ecgData.V_3;
          }
          if (ecgData.V_4) {
            this.V_4 = ecgData.V_4;
          }
          if (ecgData.V_5) {
            this.V_5 = ecgData.V_5;
          }
          if (ecgData.V_6) {
            this.V_6 = ecgData.V_6;
          }

        }

        this.TestEcgGraph();
      })
    }


  }
  TestEcgGraph() {

    var nPointsPerFrame = 10;//This value determines the speed. Higher value means more speed.
    var YRatio = 0.75;

    var ecgPulse = 0;
    var Lead_1: any = [];
    var Lead_2: any = [];
    var Lead_3: any = [];
    var AVR: any = [];
    var AVL: any = [];
    var AVF: any = [];
    var V_1: any = [];
    var V_2: any = [];
    var V_3: any = [];
    var V_4: any = [];
    var V_5: any = [];
    var V_6: any = [];
    var prevMMSel = "";
    var whichMM = "";
    var whichMV = "";
    function byId(id: any) {
      return document.getElementById(id);
    }
    function plotGrid() {
      drawBkg(byId('ecg_canvas'), 3.78, "0.25", "green");

    }

    function createGraphPaper() {
      /** Data from BLE**/
      originY_Lead_1 = 5 + 50;
      originY_Lead_2 = 100 + 50;
      originY_Lead_3 = 194 + 50;
      originY_AVR = 289 + 50;
      originY_AVL = 383 + 50;
      originY_AVF = 478 + 50;
      originY_V_1 = 5 + 50;
      originY_V_2 = 100 + 50;
      originY_V_3 = 194 + 50;
      originY_V_4 = 289 + 50;
      originY_V_5 = 383 + 50;
      originY_V_6 = 478 + 50;
      plotGrid();
      curFrame_Lead_1 = 0; curFrame_Lead_2 = 0; curFrame_Lead_3 = 0; curFrame_AVF = 0; curFrame_AVL = 0; curFrame_AVR = 0; curFrame_V_1 = 0; curFrame_V_2 = 0; curFrame_V_3 = 0; curFrame_V_4 = 0; curFrame_V_5 = 0; curFrame_V_6 = 0;

    }
    function plotGraphs(this: any) {
      var prevMMSel: number = 10;

      drawcurFrame_Lead_1.apply(this, Lead_1);
      drawcurFrame_Lead_2.apply(this, Lead_2);
      drawcurFrame_Lead_3.apply(this, Lead_3);
      drawcurFrame_AVR.apply(this, AVR);
      drawcurFrame_AVL.apply(this, AVL);
      drawcurFrame_AVF.apply(this, AVF);
      drawcurFrame_V_1.apply(this, V_1);
      drawcurFrame_V_2.apply(this, V_2);
      drawcurFrame_V_3.apply(this, V_3);
      drawcurFrame_V_4.apply(this, V_4);
      drawcurFrame_V_5.apply(this, V_5);
      drawcurFrame_V_6.apply(this, V_6);

    }

    function drawBkg(canvasElem: any | null, squareSize: number, minorLineWidthStr: string, lineColStr: string) {
      var nLinesDone = 0;
      var i, curX, curY;
      var ctx = canvasElem.getContext('2d');
      ctx.clearRect(0, 0, canvasElem.width, canvasElem.height);

      // draw the vertical lines
      curX = 0;
      ctx.strokeStyle = lineColStr;
      while (curX < canvasElem.width) {

        if (nLinesDone % 5 == 0)
          ctx.lineWidth = 0.60;
        else
          ctx.lineWidth = minorLineWidthStr;

        ctx.beginPath();
        ctx.moveTo(curX, 0);
        ctx.lineTo(curX, canvasElem.height);
        ctx.stroke();

        curX += squareSize;
        nLinesDone++;
      }

      // draw the horizontal lines
      curY = 0;
      nLinesDone = 0;
      while (curY < canvasElem.height) {
        if (nLinesDone % 5 == 0)
          ctx.lineWidth = 0.60;
        else
          ctx.lineWidth = minorLineWidthStr;
        ctx.beginPath();
        ctx.moveTo(0, curY);
        ctx.lineTo(canvasElem.width, curY);
        ctx.stroke();

        curY += squareSize;
        nLinesDone++;
      }

      ctx.rect(28, 65, 44, 20);
      ctx.fillStyle = "white";
      ctx.fill();
      ctx.linewidth = 0;
      ctx.strokeStyle = 'white';
      ctx.stroke();


      ctx.rect(28, 160, 48, 20);
      ctx.fillStyle = "white";
      ctx.fill();
      ctx.linewidth = 0;
      ctx.strokeStyle = 'white';
      ctx.stroke();


      ctx.rect(28, 254, 52, 20);
      ctx.fillStyle = "white";
      ctx.fill();
      ctx.linewidth = 0;
      ctx.strokeStyle = 'white';
      ctx.stroke();

      ctx.rect(28, 348, 32, 20);
      ctx.fillStyle = "white";
      ctx.fill();
      ctx.linewidth = 0;
      ctx.strokeStyle = 'white';
      ctx.stroke();

      ctx.rect(28, 443, 32, 20);
      ctx.fillStyle = "white";
      ctx.fill();
      ctx.linewidth = 0;
      ctx.strokeStyle = 'white';
      ctx.stroke();

      ctx.rect(28, 537, 32, 20);
      ctx.fillStyle = "white";
      ctx.fill();
      ctx.linewidth = 0;
      ctx.strokeStyle = 'white';
      ctx.stroke();

      ctx.rect(537, 65, 25, 20);
      ctx.fillStyle = "white";
      ctx.fill();
      ctx.linewidth = 0;
      ctx.strokeStyle = 'white';
      ctx.stroke();

      ctx.rect(537, 160, 25, 20);
      ctx.fillStyle = "white";
      ctx.fill();
      ctx.linewidth = 0;
      ctx.strokeStyle = 'white';
      ctx.stroke();

      ctx.rect(537, 254, 25, 20);
      ctx.fillStyle = "white";
      ctx.fill();
      ctx.linewidth = 0;
      ctx.strokeStyle = 'white';
      ctx.stroke();

      ctx.rect(537, 348, 25, 20);
      ctx.fillStyle = "white";
      ctx.fill();
      ctx.linewidth = 0;
      ctx.strokeStyle = 'white';
      ctx.stroke();

      ctx.rect(537, 443, 25, 20);
      ctx.fillStyle = "white";
      ctx.fill();
      ctx.linewidth = 0;
      ctx.strokeStyle = 'white';
      ctx.stroke();

      ctx.rect(537, 537, 25, 20);
      ctx.fillStyle = "white";
      ctx.fill();
      ctx.linewidth = 0;
      ctx.strokeStyle = 'white';
      ctx.stroke();

      ctx.fillStyle = "black";
      ctx.font = "16px Times New Roman";
      ctx.fillText("Lead_1", 29, 83);

      ctx.fillStyle = "black";
      ctx.font = "16px Times New Roman";
      ctx.fillText("Lead_2", 29, 179);

      ctx.fillStyle = "black";
      ctx.font = "16px Times New Roman";
      ctx.fillText("Lead_3", 29, 273);

      ctx.fillStyle = "black";
      ctx.font = "16px Times New Roman";
      ctx.fillText("AVR", 29, 367);

      ctx.fillStyle = "black";
      ctx.font = "16px Times New Roman";
      ctx.fillText("AVL", 29, 461);

      ctx.fillStyle = "black";
      ctx.font = "16px Times New Roman";
      ctx.fillText("AVF", 29, 556);

      ctx.fillStyle = "black";
      ctx.font = "16px Times New Roman";
      ctx.fillText("V1", 538, 83);

      ctx.fillStyle = "black";
      ctx.font = "16px Times New Roman";
      ctx.fillText("V2", 538, 179);

      ctx.fillStyle = "black";
      ctx.font = "16px Times New Roman";
      ctx.fillText("V3", 538, 273);

      ctx.fillStyle = "black";
      ctx.font = "16px Times New Roman";
      ctx.fillText("V4", 538, 367);

      ctx.fillStyle = "black";
      ctx.font = "16px Times New Roman";
      ctx.fillText("V5", 538, 461);

      ctx.fillStyle = "black";
      ctx.font = "16px Times New Roman";
      ctx.fillText("V6", 538, 556);
    }
   
    //FIRST GRAPH Lead_1
    // position that will be treated as 0,0 when drawing our points.
    var originX_Lead_1 = 27;
    var originY_Lead_1 = 5;

    function Draw_Lead_1(nSamplesToDraw: string | number, firstSample: any | number, lineWidthStr: string, lineColourStr: string) {
      //console.log(" nSamplesToDraw " + nSamplesToDraw + " firstSample " + firstSample + " lineWidthStr " + lineWidthStr + " lineColourStr " + lineColourStr);
      var can: any = byId('ecg_canvas');
      var ctx = can.getContext('2d');

      ctx.strokeStyle = lineColourStr;
      ctx.lineWidth = lineWidthStr;
      //console.log(firstSample);.log(firstSample);
      ctx.beginPath();

      ctx.moveTo(originX_Lead_1 + (firstSample * 0.377), originY_Lead_1 + ((Lead_1[firstSample - 1] * YRatio) * -1));

      for (var i = 0; i < nSamplesToDraw; i++) {
        var curSample = Lead_1[i + firstSample];// calculate y coordinate


        ctx.lineTo(originX_Lead_1 + ((firstSample + i) * 0.377), originY_Lead_1 + ((curSample * YRatio) * -1));


      }

      ctx.stroke();
    }

    var curFrame_Lead_1 = 0;//Starts with frame 0.
    function drawcurFrame_Lead_1() {
      Draw_Lead_1(nPointsPerFrame, nPointsPerFrame * curFrame_Lead_1, "1", "red");//Calling function to draw the graph
      curFrame_Lead_1 += 1;//Frame is incremented one by 1.
      if (curFrame_Lead_1 < 130) {
        requestAnimationFrame(drawcurFrame_Lead_1);
      } else {
        //console.log("ploting completed , now Close Btn enabled......");
        $('.parameterModalBtn').removeAttr('disabled');
        $('#printEcgGraphBtn').show();
      }

    }

    //SECOND GRAPH Lead_2

    var originX_Lead_2 = 27;
    var originY_Lead_2 = 100;

    function Draw_Lead_2(nSamplesToDraw: number, firstSample: number, lineWidthStr: string, lineColourStr: string) {
      var can: any = byId('ecg_canvas');
      var ctx = can.getContext('2d');

      ctx.strokeStyle = lineColourStr;
      ctx.lineWidth = lineWidthStr;
      //console.log(firstSample);
      ctx.beginPath();

      ctx.moveTo(originX_Lead_2 + (firstSample * 0.377), originY_Lead_2 + ((Lead_2[firstSample - 1] * YRatio) * -1));

      for (var i = 0; i < nSamplesToDraw; i++) {
        var curSample = Lead_2[i + firstSample];// calculate y coordinate


        ctx.lineTo(originX_Lead_2 + ((firstSample + i) * 0.377), originY_Lead_2 + ((curSample * YRatio) * -1));


      }

      ctx.stroke();
    }

    var curFrame_Lead_2 = 0;//Starts with frame 0.
    function drawcurFrame_Lead_2() {
      Draw_Lead_2(nPointsPerFrame, nPointsPerFrame * curFrame_Lead_2, "1", "red");//Calling function to draw the graph
      curFrame_Lead_2 += 1;//Frame is incremented one by 1.
      if (curFrame_Lead_2 < 130)
        requestAnimationFrame(drawcurFrame_Lead_2);
    }

    //THIRD GRAPH Lead_3
    var originX_Lead_3 = 27;
    var originY_Lead_3 = 194;

    function Draw_Lead_3(nSamplesToDraw: number, firstSample: number, lineWidthStr: string, lineColourStr: string) {
      var can: any = byId('ecg_canvas');
      var ctx = can.getContext('2d');

      ctx.strokeStyle = lineColourStr;
      ctx.lineWidth = lineWidthStr;
      //console.log(firstSample);
      ctx.beginPath();

      ctx.moveTo(originX_Lead_3 + (firstSample * 0.377), originY_Lead_3 + ((Lead_3[firstSample - 1] * YRatio) * -1));

      for (var i = 0; i < nSamplesToDraw; i++) {
        var curSample = Lead_3[i + firstSample];// calculate y coordinate


        ctx.lineTo(originX_Lead_3 + ((firstSample + i) * 0.377), originY_Lead_3 + ((curSample * YRatio) * -1));


      }

      ctx.stroke();
    }

    var curFrame_Lead_3 = 0;//Starts with frame 0.
    function drawcurFrame_Lead_3() {
      Draw_Lead_3(nPointsPerFrame, nPointsPerFrame * curFrame_Lead_3, "1", "red");//Calling function to draw the graph
      curFrame_Lead_3 += 1;//Frame is incremented one by 1.
      if (curFrame_Lead_3 < 130)
        requestAnimationFrame(drawcurFrame_Lead_3);
    }

    //FOURTH GRAPH AVR
    var originX_AVR = 27;
    var originY_AVR = 289;

    function Draw_AVR(nSamplesToDraw: number, firstSample: number, lineWidthStr: string, lineColourStr: string) {
      var can: any = byId('ecg_canvas');
      var ctx = can.getContext('2d');

      ctx.strokeStyle = lineColourStr;
      ctx.lineWidth = lineWidthStr;
      //console.log(firstSample);
      ctx.beginPath();

      ctx.moveTo(originX_AVR + (firstSample * 0.377), originY_AVR + ((AVR[firstSample - 1] * YRatio) * -1));

      for (var i = 0; i < nSamplesToDraw; i++) {
        var curSample = AVR[i + firstSample];// calculate y coordinate


        ctx.lineTo(originX_AVR + ((firstSample + i) * 0.377), originY_AVR + ((curSample * YRatio) * -1));


      }

      ctx.stroke();
    }

    var curFrame_AVR = 0;//Starts with frame 0.
    function drawcurFrame_AVR() {
      Draw_AVR(nPointsPerFrame, nPointsPerFrame * curFrame_AVR, "1", "red");//Calling function to draw the graph
      curFrame_AVR += 1;//Frame is incremented one by 1.
      if (curFrame_AVR < 130)
        requestAnimationFrame(drawcurFrame_AVR);
    }

    //FIFTH GRAPH AVL
    var originX_AVL = 27;
    var originY_AVL = 383;

    function Draw_AVL(nSamplesToDraw: number, firstSample: number, lineWidthStr: string, lineColourStr: string) {
      var can: any = byId('ecg_canvas');
      var ctx = can.getContext('2d');

      ctx.strokeStyle = lineColourStr;
      ctx.lineWidth = lineWidthStr;
      //console.log(firstSample);
      ctx.beginPath();

      ctx.moveTo(originX_AVL + (firstSample * 0.377), originY_AVL + ((AVL[firstSample - 1] * YRatio) * -1));

      for (var i = 0; i < nSamplesToDraw; i++) {
        var curSample = AVL[i + firstSample];// calculate y coordinate


        ctx.lineTo(originX_AVL + ((firstSample + i) * 0.377), originY_AVL + ((curSample * YRatio) * -1));


      }

      ctx.stroke();
    }

    var curFrame_AVL = 0;//Starts with frame 0.
    function drawcurFrame_AVL() {
      Draw_AVL(nPointsPerFrame, nPointsPerFrame * curFrame_AVL, "1", "red");//Calling function to draw the graph
      curFrame_AVL += 1;//Frame is incremented one by 1.
      if (curFrame_AVL < 130)
        requestAnimationFrame(drawcurFrame_AVL);
    }

    //SIXTH GRAPH AVF
    var originX_AVF = 27;
    var originY_AVF = 478;

    function Draw_AVF(nSamplesToDraw: number, firstSample: number, lineWidthStr: string, lineColourStr: string) {
      var can: any = byId('ecg_canvas');
      var ctx = can.getContext('2d');

      ctx.strokeStyle = lineColourStr;
      ctx.lineWidth = lineWidthStr;
      //console.log(firstSample);
      ctx.beginPath();

      ctx.moveTo(originX_AVF + (firstSample * 0.377), originY_AVF + ((AVF[firstSample - 1] * YRatio) * -1));

      for (var i = 0; i < nSamplesToDraw; i++) {
        var curSample = AVF[i + firstSample];// calculate y coordinate


        ctx.lineTo(originX_AVF + ((firstSample + i) * 0.377), originY_AVF + ((curSample * YRatio) * -1));


      }

      ctx.stroke();
    }

    var curFrame_AVF = 0;//Starts with frame 0.
    function drawcurFrame_AVF() {
      Draw_AVF(nPointsPerFrame, nPointsPerFrame * curFrame_AVF, "1", "red");//Calling function to draw the graph
      curFrame_AVF += 1;//Frame is incremented one by 1.
      if (curFrame_AVF < 130)
        requestAnimationFrame(drawcurFrame_AVF);
    }

    //SEVENTH GRAPH V_1
    var originX_V_1 = 537;
    var originY_V_1 = 5;

    function Draw_V_1(nSamplesToDraw: number, firstSample: number, lineWidthStr: string, lineColourStr: string) {
      var can: any = byId('ecg_canvas');
      var ctx = can.getContext('2d');

      ctx.strokeStyle = lineColourStr;
      ctx.lineWidth = lineWidthStr;
      //console.log(firstSample);
      ctx.beginPath();

      ctx.moveTo(originX_V_1 + (firstSample * 0.377), originY_V_1 + ((V_1[firstSample - 1] * YRatio) * -1));

      for (var i = 0; i < nSamplesToDraw; i++) {
        var curSample = V_1[i + firstSample];// calculate y coordinate


        ctx.lineTo(originX_V_1 + ((firstSample + i) * 0.377), originY_V_1 + ((curSample * YRatio) * -1));


      }

      ctx.stroke();
    }

    var curFrame_V_1 = 0;//Starts with frame 0.
    function drawcurFrame_V_1() {
      Draw_V_1(nPointsPerFrame, nPointsPerFrame * curFrame_V_1, "1", "red");//Calling function to draw the graph
      curFrame_V_1 += 1;//Frame is incremented one by 1.
      if (curFrame_V_1 < 130)
        requestAnimationFrame(drawcurFrame_V_1);
    }

    //EIGTH GRAPH V_2
    var originX_V_2 = 537;
    var originY_V_2 = 100;

    function Draw_V_2(nSamplesToDraw: number, firstSample: number, lineWidthStr: string, lineColourStr: string) {
      var can: any = byId('ecg_canvas');
      var ctx = can.getContext('2d');

      ctx.strokeStyle = lineColourStr;
      ctx.lineWidth = lineWidthStr;
      //console.log(firstSample);
      ctx.beginPath();

      ctx.moveTo(originX_V_2 + (firstSample * 0.377), originY_V_2 + ((V_2[firstSample - 1] * YRatio) * -1));

      for (var i = 0; i < nSamplesToDraw; i++) {
        var curSample = V_2[i + firstSample];// calculate y coordinate


        ctx.lineTo(originX_V_2 + ((firstSample + i) * 0.377), originY_V_2 + ((curSample * YRatio) * -1));


      }

      ctx.stroke();
    }

    var curFrame_V_2 = 0;//Starts with frame 0.
    function drawcurFrame_V_2() {
      Draw_V_2(nPointsPerFrame, nPointsPerFrame * curFrame_V_2, "1", "red");//Calling function to draw the graph
      curFrame_V_2 += 1;//Frame is incremented one by 1.
      if (curFrame_V_2 < 130)
        requestAnimationFrame(drawcurFrame_V_2);
    }


    //NINTH GRAPH V_3
    var originX_V_3 = 537;
    var originY_V_3 = 194;

    function Draw_V_3(nSamplesToDraw: number, firstSample: number, lineWidthStr: string, lineColourStr: string) {
      var can: any = byId('ecg_canvas');
      var ctx = can.getContext('2d');

      ctx.strokeStyle = lineColourStr;
      ctx.lineWidth = lineWidthStr;
      //console.log(firstSample);
      ctx.beginPath();

      ctx.moveTo(originX_V_3 + (firstSample * 0.377), originY_V_3 + ((V_3[firstSample - 1] * YRatio) * -1));

      for (var i = 0; i < nSamplesToDraw; i++) {
        var curSample = V_3[i + firstSample];// calculate y coordinate


        ctx.lineTo(originX_V_3 + ((firstSample + i) * 0.377), originY_V_3 + ((curSample * YRatio) * -1));


      }

      ctx.stroke();
    }

    var curFrame_V_3 = 0;//Starts with frame 0.
    function drawcurFrame_V_3() {
      Draw_V_3(nPointsPerFrame, nPointsPerFrame * curFrame_V_3, "1", "red");//Calling function to draw the graph
      curFrame_V_3 += 1;//Frame is incremented one by 1.
      if (curFrame_V_3 < 130)
        requestAnimationFrame(drawcurFrame_V_3);
    }

    //TENTH GRAPH V_4
    var originX_V_4 = 537;
    var originY_V_4 = 289;

    function Draw_V_4(nSamplesToDraw: number, firstSample: number, lineWidthStr: string, lineColourStr: string) {
      var can: any = byId('ecg_canvas');
      var ctx = can.getContext('2d');

      ctx.strokeStyle = lineColourStr;
      ctx.lineWidth = lineWidthStr;
      //console.log(firstSample);
      ctx.beginPath();

      ctx.moveTo(originX_V_4 + (firstSample * 0.377), originY_V_4 + ((V_4[firstSample - 1] * YRatio) * -1));

      for (var i = 0; i < nSamplesToDraw; i++) {
        var curSample = V_4[i + firstSample];// calculate y coordinate


        ctx.lineTo(originX_V_4 + ((firstSample + i) * 0.377), originY_V_4 + ((curSample * YRatio) * -1));


      }

      ctx.stroke();
    }

    var curFrame_V_4 = 0;//Starts with frame 0.
    function drawcurFrame_V_4(V_4: any) {
      Draw_V_4(nPointsPerFrame, nPointsPerFrame * curFrame_V_4, "1", "red");//Calling function to draw the graph
      curFrame_V_4 += 1;//Frame is incremented one by 1.
      if (curFrame_V_4 < 130)
        requestAnimationFrame(drawcurFrame_V_4);
    }

    //ELEVENTH GRAPH V_5
    var originX_V_5 = 537;
    var originY_V_5 = 383;

    function Draw_V_5(nSamplesToDraw: number, firstSample: number, lineWidthStr: string, lineColourStr: string) {
      var can: any = byId('ecg_canvas');
      var ctx = can.getContext('2d');

      ctx.strokeStyle = lineColourStr;
      ctx.lineWidth = lineWidthStr;
      //console.log(firstSample);
      ctx.beginPath();

      ctx.moveTo(originX_V_5 + (firstSample * 0.377), originY_V_5 + ((V_5[firstSample - 1] * YRatio) * -1));

      for (var i = 0; i < nSamplesToDraw; i++) {
        var curSample = V_5[i + firstSample];// calculate y coordinate


        ctx.lineTo(originX_V_5 + ((firstSample + i) * 0.377), originY_V_5 + ((curSample * YRatio) * -1));


      }

      ctx.stroke();
    }

    var curFrame_V_5 = 0;//Starts with frame 0.
    function drawcurFrame_V_5(V_5: any) {
      Draw_V_5(nPointsPerFrame, nPointsPerFrame * curFrame_V_5, "1", "red");//Calling function to draw the graph
      curFrame_V_5 += 1;//Frame is incremented one by 1.
      if (curFrame_V_5 < 130)
        requestAnimationFrame(drawcurFrame_V_5);
    }


    //TWELFTH GRAPH V_6
    var originX_V_6 = 537;
    var originY_V_6 = 478;

    function Draw_V_6(nSamplesToDraw: number, firstSample: number, lineWidthStr: string, lineColourStr: string) {
      var can: any = byId('ecg_canvas');
      var ctx = can.getContext('2d');

      ctx.strokeStyle = lineColourStr;
      ctx.lineWidth = lineWidthStr;
      //console.log(firstSample);
      ctx.beginPath();

      ctx.moveTo(originX_V_6 + (firstSample * 0.377), originY_V_6 + ((V_6[firstSample - 1] * YRatio) * -1));

      for (var i = 0; i < nSamplesToDraw; i++) {
        var curSample = V_6[i + firstSample];// calculate y coordinate


        ctx.lineTo(originX_V_6 + ((firstSample + i) * 0.377), originY_V_6 + ((curSample * YRatio) * -1));


      }

      ctx.stroke();
    }

    var curFrame_V_6 = 0;//Starts with frame 0.
    function drawcurFrame_V_6() {
      Draw_V_6(nPointsPerFrame, nPointsPerFrame * curFrame_V_6, "1", "red");//Calling function to draw the graph
      curFrame_V_6 += 1;//Frame is incremented one by 1.
      if (curFrame_V_6 < 130)
        requestAnimationFrame(drawcurFrame_V_6);
    }


    function plotEcgData() {
      var el: any = byId('ecgArea')
      el.style.display = 'block';
      createGraphPaper();  // method available in ECGPloting.js
      plotGraphs();     //  method available in ECGPloting.js

    }

    var el: any = byId('ecgArea')
    el.style.display = 'block';
    //  var el1:any = byId('ecgPulseRate')

    //  el1.innerHTML = 80;

    Lead_1 = this.Lead_1;
    Lead_2 = this.Lead_2;
    Lead_3 = this.Lead_3;
    AVR = this.AVR;
    AVL = this.AVL;
    AVF = this.AVF;
    V_1 = this.V_1;
    V_2 = this.V_2;
    V_3 = this.V_3;
    V_4 = this.V_4;
    V_5 = this.V_5;
    V_6 = this.V_6;



    createGraphPaper();

    plotGraphs();

  }

}
